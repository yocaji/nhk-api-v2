/**
 * NHK API v2
 * JavaScript client for NHK Program Guide API.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.NhkApiV2);
  }
}(this, function(expect, NhkApiV2) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new NhkApiV2.ListList();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ListList', function() {
    it('should create an instance of ListList', function() {
      // uncomment below and update the code to test ListList
      //var instance = new NhkApiV2.ListList();
      //expect(instance).to.be.a(NhkApiV2.ListList);
    });

    it('should have the property g1 (base name: "g1")', function() {
      // uncomment below and update the code to test the property g1
      //var instance = new NhkApiV2.ListList();
      //expect(instance).to.be();
    });

    it('should have the property g2 (base name: "g2")', function() {
      // uncomment below and update the code to test the property g2
      //var instance = new NhkApiV2.ListList();
      //expect(instance).to.be();
    });

    it('should have the property e1 (base name: "e1")', function() {
      // uncomment below and update the code to test the property e1
      //var instance = new NhkApiV2.ListList();
      //expect(instance).to.be();
    });

    it('should have the property e2 (base name: "e2")', function() {
      // uncomment below and update the code to test the property e2
      //var instance = new NhkApiV2.ListList();
      //expect(instance).to.be();
    });

    it('should have the property e3 (base name: "e3")', function() {
      // uncomment below and update the code to test the property e3
      //var instance = new NhkApiV2.ListList();
      //expect(instance).to.be();
    });

    it('should have the property e4 (base name: "e4")', function() {
      // uncomment below and update the code to test the property e4
      //var instance = new NhkApiV2.ListList();
      //expect(instance).to.be();
    });

    it('should have the property s1 (base name: "s1")', function() {
      // uncomment below and update the code to test the property s1
      //var instance = new NhkApiV2.ListList();
      //expect(instance).to.be();
    });

    it('should have the property s2 (base name: "s2")', function() {
      // uncomment below and update the code to test the property s2
      //var instance = new NhkApiV2.ListList();
      //expect(instance).to.be();
    });

    it('should have the property s3 (base name: "s3")', function() {
      // uncomment below and update the code to test the property s3
      //var instance = new NhkApiV2.ListList();
      //expect(instance).to.be();
    });

    it('should have the property s4 (base name: "s4")', function() {
      // uncomment below and update the code to test the property s4
      //var instance = new NhkApiV2.ListList();
      //expect(instance).to.be();
    });

    it('should have the property r1 (base name: "r1")', function() {
      // uncomment below and update the code to test the property r1
      //var instance = new NhkApiV2.ListList();
      //expect(instance).to.be();
    });

    it('should have the property r2 (base name: "r2")', function() {
      // uncomment below and update the code to test the property r2
      //var instance = new NhkApiV2.ListList();
      //expect(instance).to.be();
    });

    it('should have the property r3 (base name: "r3")', function() {
      // uncomment below and update the code to test the property r3
      //var instance = new NhkApiV2.ListList();
      //expect(instance).to.be();
    });

    it('should have the property n1 (base name: "n1")', function() {
      // uncomment below and update the code to test the property n1
      //var instance = new NhkApiV2.ListList();
      //expect(instance).to.be();
    });

    it('should have the property n2 (base name: "n2")', function() {
      // uncomment below and update the code to test the property n2
      //var instance = new NhkApiV2.ListList();
      //expect(instance).to.be();
    });

    it('should have the property n3 (base name: "n3")', function() {
      // uncomment below and update the code to test the property n3
      //var instance = new NhkApiV2.ListList();
      //expect(instance).to.be();
    });

    it('should have the property tv (base name: "tv")', function() {
      // uncomment below and update the code to test the property tv
      //var instance = new NhkApiV2.ListList();
      //expect(instance).to.be();
    });

    it('should have the property radio (base name: "radio")', function() {
      // uncomment below and update the code to test the property radio
      //var instance = new NhkApiV2.ListList();
      //expect(instance).to.be();
    });

    it('should have the property netradio (base name: "netradio")', function() {
      // uncomment below and update the code to test the property netradio
      //var instance = new NhkApiV2.ListList();
      //expect(instance).to.be();
    });

  });

}));
